version: '3.4'
volumes:
  db-data: {}
  redis-data: {}
  worker-scheduler-data: {}
services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 3s
      retries: 10
  pgbouncer:
    depends_on:
      - db
    image: brainsam/pgbouncer:1.7.2
    environment:
      DB_HOST: db
      DB_USER: postgres           # define credentials
      DB_PASSWORD: postgres       # define credentials
      DB_port: 5432               # define database
    links:
      - db:postgres
    ports:
      - 6432:6432                 # PgBouncer port
  redis:
    image: redis:6.2.1-alpine
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 10
  web:
    build:
      context: .
      dockerfile: containers/web/Dockerfile
    env_file: .env
    volumes:
      - ./src/static/:/app/static/
    depends_on:
      - db
    environment:
      STARTUP: APP
    ports:
      - '8000:80'
    healthcheck:
      test: [ "CMD-SHELL", "curl localhost:8000/api/health/" ]
      interval: 1s
      timeout: 3s
      retries: 10
  nginx:
    build:
      context: .
      dockerfile: containers/nginx/Dockerfile
    volumes:
      - ./src/static/:/staticfiles
    ports:
      - "1337:80"
    depends_on:
      - web
  worker:
    build:
      context: .
      dockerfile: containers/web/Dockerfile
    env_file: .env
    environment:
      STARTUP: WORKER
    depends_on:
      - db
      - redis
    healthcheck:
        test: ["CMD-SHELL", "celery -A celery_app inspect ping -d celery@$HOSTNAME"]
        interval: 1s
        timeout: 3s
        retries: 10
  worker-dashboard:
    image: mher/flower
    env_file: .env
    depends_on:
      - redis
    ports:
      - '5555:5555'
  worker-scheduler:
    build:
      context: .
      dockerfile: containers/web/Dockerfile
    env_file: .env
    volumes:
      - worker-scheduler-data:/data
    environment:
      STARTUP: WORKER-SCHEDULER
    depends_on:
      - db
      - redis
      - worker
